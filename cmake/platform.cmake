cmake_minimum_required(VERSION 3.9)

enable_language(ASM)

# Save a copy of all the native 
# stuff for the native platform/toolchain

# Native platform things
set(NATIVE_C_FLAGS ${CMAKE_C_FLAGS})
set(NATIVE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
set(NATIVE_ASM_FLAGS ${CMAKE_ASM_FLAGS})

set(NATIVE_CXX_COMPILER ${CMAKE_CXX_COMPILER})
set(NATIVE_C_COMPILER ${CMAKE_C_COMPILER})
set(NATIVE_ASM_COMPILER ${CMAKE_C_COMPILER})

set(NATIVE_AR ${CMAKE_AR})
set(NATIVE_RANLIB ${CMAKE_RANLIB})

set(NATIVE_C_LINK_EXECUTABLE ${CMAKE_C_LINK_EXECUTABLE})
set(NATIVE_CXX_LINK_EXECUTABLE ${CMAKE_CXX_LINK_EXECUTABLE})
set(NATIVE_ASM_LINK_EXECUTABLE ${CMAKE_ASM_LINK_EXECUTABLE})

# Sets up a platform to use a specific toolchain file
function(platform_use_toolchain PLATFORM TOOLCHAIN)
    set("PLATFORM_${PLATFORM}_TOOLCHAIN" ${TOOLCHAIN})
endfunction()

function(use_platform PLATFORM)
    include("${CMAKE_CURRENT_LIST_DIR}/platforms/${PLATFORM}.cmake")

    set(CMAKE_C_FLAGS ${PLATFORM_C_FLAGS} PARENT_SCOPE)
    set(CMAKE_CXX_FLAGS ${PLATFORM_CXX_FLAGS} PARENT_SCOPE)
    set(CMAKE_ASM_FLAGS ${PLATFORM_ASM_FLAGS} PARENT_SCOPE)

    set(CMAKE_C_LINK_FLAGS ${PLATFORM_C_LINK_FLAGS} PARENT_SCOPE)
    set(CMAKE_CXX_LINK_FLAGS ${PLATFORM_CXX_LINK_FLAGS} PARENT_SCOPE)
    set(CMAKE_ASM_LINK_FLAGS ${PLATFORM_ASM_LINK_FLAGS} PARENT_SCOPE)

    # Get the toolchain for this platform
    set(TOOLCHAIN "${PLATFORM_${PLATFORM}_TOOLCHAIN}")
    if (NOT TOOLCHAIN)
        set(TOOLCHAIN "${PLATFORM_DEFAULT_TOOLCHAIN}")
    endif()

    include("${CMAKE_CURRENT_LIST_DIR}/toolchains/${TOOLCHAIN}.cmake")
    set(CMAKE_CXX_COMPILER ${TOOLCHAIN_CXX_COMPILER} PARENT_SCOPE)
    set(CMAKE_C_COMPILER ${TOOLCHAIN_C_COMPILER} PARENT_SCOPE)
    set(CMAKE_ASM_COMPILER ${TOOLCHAIN_ASM_COMPILER} PARENT_SCOPE)
    set(CMAKE_AR ${TOOLCHAIN_AR} PARENT_SCOPE)
    set(CMAKE_RANLIB ${TOOLCHAIN_RANLIB} PARENT_SCOPE)

    set(CMAKE_C_LINK_EXECUTABLE  ${TOOLCHAIN_C_LINK_CMD} PARENT_SCOPE)
    set(CMAKE_CXX_LINK_EXECUTABLE  ${TOOLCHAIN_CXX_LINK_CMD} PARENT_SCOPE)
    set(CMAKE_ASM_LINK_EXECUTABLE  ${TOOLCHAIN_ASM_LINK_CMD} PARENT_SCOPE)
endfunction(use_platform)
